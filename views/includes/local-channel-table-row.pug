tr.word-wrap
	th.text-end.fw-light #{(channel_index + offset + 1).toLocaleString()}

	td
		.mb-2
			if (channel.active)
				+pillBadgeSuccess("Active")
				
			else if (channel.chan_id)
				if (channel.close_type)
					span.border-dotted(title=`Close type: `, data-bs-toggle="tooltip")
						+pillBadgeDanger(`Closed`)
					

				else
					+pillBadgeWarning("Inactive")

			else
				if (pendingOpenChannels.includes(channel))
					+pillBadgeWarning("Opening")

				if (pendingCloseChannels.includes(channel))
					+pillBadgeDanger("Closing")

				if (pendingForceCloseChannels.includes(channel))
					+pillBadgeDanger("Force Closing")

				if (waitingCloseChannels.includes(channel))
					+pillBadgeWarning("Waiting to Close")


			if (channel.private)
				+pillBadgeSuccess
					span.me-1 Private
					i.fas.fa-lock

			else
				+pillBadgeWarning
					span.me-1 Public
					i.fas.fa-eye


		if (channel.chan_id)
			.mb-2
				+channelId(channel.chan_id, channel.active || (channel.chan_id && !channel.close_type))



		if (pendingOpenChannels && pendingOpenChannels.includes(channel))
			.mb-1
				+pillBadgeInfo("Opening Tx")
			
			- var btc_txid = channel.channel.channel_point.substring(0, channel.channel.channel_point.indexOf(":"));
			- var outpoint_output_index = channel.channel.channel_point.substring(channel.channel.channel_point.indexOf(":") + 1);

			+btcTxid(btc_txid, 12)
			span.ms-1 [#{outpoint_output_index}]



		

	td
		if (channel.remote_pubkey)
			- var card_node_pubkey = channel.remote_pubkey;
			
		else if (channel.channel.remote_node_pub)
			- var card_node_pubkey = channel.channel.remote_node_pub;

		+nodeCard(card_node_pubkey)

	if (false)
		td.text-end
			if (config.blockExplorerUrl && parsedChannelIds[channel.chan_id].blockHeight > 0)
				a(href=`${config.blockExplorerUrl}/block-height/${parsedChannelIds[channel.chan_id].blockHeight}` target="_blank") #{parsedChannelIds[channel.chan_id].blockHeight.toLocaleString()}

			else
				if (parsedChannelIds[channel.chan_id].blockHeight > 0)
					span #{parsedChannelIds[channel.chan_id].blockHeight.toLocaleString()}
				else
					span -

	

	td
		- let localBalance = null;
		- let remoteBalance = null;

		if (channel.active)
			- localBalance = channel.local_balance;
			- remoteBalance = channel.remote_balance;

		else if (channel.channel != null)
			- localBalance = channel.channel.local_balance;
			- remoteBalance = channel.channel.remote_balance;


		if (localBalance != null)
			- let localBalancePercent = new Decimal(localBalance).dividedBy(parseInt(localBalance) + parseInt(remoteBalance)).times(100);
			- let remoteBalancePercent = new Decimal(remoteBalance).dividedBy(parseInt(localBalance) + parseInt(remoteBalance)).times(100);

			.progress.mb-2(style="height: 15px;")
				.progress-bar.text-bg-primary.fs-90(role="progressbar", style=`width: ${localBalancePercent.toDP(0)}%;`, aria-valuenow=`${localBalancePercent.toDP(0)}`, aria-valuemin="0", aria-valuemax="100") #{localBalancePercent.toDP(1)}%

				.progress-bar.text-bg-info.fs-90(role="progressbar", style=`width: ${remoteBalancePercent.toDP(0)}%;`, aria-valuenow=`${remoteBalancePercent.toDP(0)}`, aria-valuemin="0", aria-valuemax="100") #{remoteBalancePercent.toDP(1)}%
		
			
			.d-flex.justify-content-between
				.text-start
					span.badge.text-bg-primary.fs-80(title="Spendable balance", data-bs-toggle="tooltip")
						+btcValue(localBalance)

				.text-end
					span.badge.text-bg-info.fs-80(title="Spendable balance", data-bs-toggle="tooltip")
						+btcValue(remoteBalance)

		else
			.text-end -


	td
		- let valueReceived = null;
		- let valueSent = null;

		if (channel.active)
			- valueReceived = channel.total_satoshis_received;
			- valueSent = channel.total_satoshis_sent;

		else if (channel.channel != null)
			- valueReceived = channel.channel.total_satoshis_received;
			- valueSent = channel.channel.total_satoshis_sent;


		if (valueReceived != null)
			- let receivedPercent = new Decimal(valueReceived).dividedBy(parseInt(valueReceived) + parseInt(valueSent)).times(100);
			- let sentPercent = new Decimal(valueSent).dividedBy(parseInt(valueReceived) + parseInt(valueSent)).times(100);

			.progress.mb-2(style="height: 15px;")
				.progress-bar.text-bg-success.fs-90(role="progressbar", style=`width: ${receivedPercent.toDP(0)}%;`, aria-valuenow=`${receivedPercent.toDP(0)}`, aria-valuemin="0", aria-valuemax="100") #{receivedPercent.toDP(1)}%

				.progress-bar.text-bg-danger.fs-90(role="progressbar", style=`width: ${sentPercent.toDP(0)}%;`, aria-valuenow=`${sentPercent.toDP(0)}`, aria-valuemin="0", aria-valuemax="100") #{sentPercent.toDP(1)}%
		
			
			.d-flex.justify-content-between
				.text-start
					span.badge.text-bg-success.fs-80(title="Value received", data-bs-toggle="tooltip")
						+btcValue(valueReceived)

				.text-end
					span.badge.text-bg-danger.fs-80(title="Value sent", data-bs-toggle="tooltip")
						+btcValue(valueSent)

		else
			.text-end -






	td.text-end
		if (channel.active && fullNetworkDescription.channelsById[channel.chan_id])
			- var lastUpdateTimestamp = fullNetworkDescription.channelsById[channel.chan_id].last_update;

			+date(lastUpdateTimestamp, "human")

		else
			span -

	td.text-end
		a.btn.btn-sm.btn-primary(href="javascript:void(0)" data-bs-toggle="modal" data-bs-target=("#localChannelModal-" + localChannel_index))
			i.fas.fa-file-lines
		