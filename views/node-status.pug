extends layout

block headContent
  title Node Status

block breadcrumb
  li.breadcrumb-item
    a(href="/") Home
  li.breadcrumb-item My Node
  li.breadcrumb-item Node Details

block content
  h1.h2 Node Details
  hr

  if (!getInfo && !listPeers)
    .alert.alert-danger No data available. Check your RPC connection.

  else
    ul.nav.nav-tabs.mb-3
      li.nav-item
        a.nav-link.active(
          data-bs-toggle="tab",
          href="#tab-details",
          role="tab"
        ) Details
      li.nav-item
        a.nav-link(data-bs-toggle="tab", href="#tab-json", role="tab") JSON

    .tab-content
      #tab-details.tab-pane.active(role="tabpanel")
        .card.mb-3.shadow-sm
          .card-header
            h2.h6.mb-0 Summary
          .card-body
            .row
              .col-md-8
                .row
                  .summary-split-table-label Version
                  .summary-split-table-content #{ getInfo.version }

                .col-md-6
                .row
                  .summary-split-table-label URIs
                  .summary-split-table-content
                    each uri, index in getInfo.uris
                      if (getInfo.uris.length > 1)
                        span #{ index + 1 }: #{ uri }
                      else
                        span #{ uri }

                .row
                  .summary-split-table-label Public Key
                  .summary-split-table-content
                    a(href="/node/" + getInfo.identity_pubkey) #{ getInfo.identity_pubkey }

                .row
                  .summary-split-table-label Alias
                  .summary-split-table-content #{ getInfo.alias }

                .row
                  .summary-split-table-label Color
                  .summary-split-table-content
                    - var node_color = fullNetworkDescription.nodeInfoByPubkey[getInfo.identity_pubkey].node.color;
                    +nodeColorSwatch(node_color)

                .row
                  .summary-split-table-label Chains
                  .summary-split-table-content
                    each chain in getInfo.chains
                      span #{ chain.chain }_#{ chain.network }
                      br

                .row
                  .summary-split-table-label Block Hash
                  .summary-split-table-content
                    if (config.blockExplorerUrl)
                      a(
                        href=config.blockExplorerUrl + "/block/" + getInfo.block_hash,
                        target="_blank"
                      ) #{ getInfo.block_hash }
                      br
                      span.text-muted (#{ getInfo.block_height.toLocaleString() })
                    else
                      span #{ getInfo.block_hash }
                      br
                      span.text-muted (#{ getInfo.block_height.toLocaleString() })

                .row
                  .summary-split-table-label Channels
                  .summary-split-table-content #{ parseInt(getInfo.num_active_channels).toLocaleString() }

                if (getInfo.num_pending_channels > 0)
                  .row
                    .summary-split-table-label Pending Channels
                    .summary-split-table-content #{ parseInt(getInfo.num_pending_channels).toLocaleString() }

              .col-md-4
                if (qrcodeUrls[getInfo.identity_pubkey])
                  div(style="display: inline-block; margin-right: 15px")
                    img(
                      src=qrcodeUrls[getInfo.identity_pubkey],
                      alt=getInfo.identity_pubkey,
                      style="border: solid 1px #ccc"
                    )
                    br
                    span.text-center.monospace Public Key

                if (getInfo.uris && getInfo.uris.length > 0 && qrcodeUrls[getInfo.uris[0]])
                  div(style="display: inline-block")
                    img(
                      src=qrcodeUrls[getInfo.uris[0]],
                      alt=getInfo.uris[0],
                      style="border: solid 1px #ccc"
                    )
                    br
                    span.text-center.monospace URI

        .card.mb-3.shadow-sm
          .card-header
            h2.h6.mb-0
              span #{ listPeers.peers.length.toLocaleString() } 
              if (listPeers.peers.length == 1)
                span Peer
              else
                span Peers

          .card-body
            table.table.table-responsive-sm
              thead
                tr
                  th Node
                  th Address
                  th Value Transfer (received / sent)
                  th Data Transfer

                  th.text-center Inbound?
                  th.text-end Ping

              tbody
                each item in listPeers.peers
                  tr
                    td
                      +nodeCard(item.pub_key)

                    td #{ item.address }

                    td
                      if (item.sat_recv == 0 && item.sat_sent == 0)
                        span -
                      else
                        i.fas.fa-sign-in-alt.me-2
                        span #{ parseInt(item.sat_recv).toLocaleString() } sat

                        br

                        i.fas.fa-sign-out-alt.me-2
                        span #{ parseInt(item.sat_sent).toLocaleString() }

                    - var bytesSentData = utils.formatLargeNumber(item.bytes_sent, 2);
                    - var bytesRecvData = utils.formatLargeNumber(item.bytes_recv, 2);

                    td
                      i.fas.fa-arrow-up.me-2
                      span #{ bytesSentData[0] } #{ bytesSentData[1].abbreviation }B

                      br

                      i.fas.fa-arrow-down.me-2
                      span #{ bytesRecvData[0] } #{ bytesRecvData[1].abbreviation }B

                    td.text-center
                      if (item.inbound)
                        i.fas.fa-check.text-success
                      else
                        i.fas.fa-times

                    td.text-end #{ parseInt(item.ping_time).toLocaleString() }

      #tab-json.tab-pane(role="tabpanel")
        if (getInfo)
          h4 getinfo
          pre
            code #{ JSON.stringify(getInfo, null, 4) }

        if (listPeers)
          h4 listpeers
          pre
            code #{ JSON.stringify(listPeers, null, 4) }
