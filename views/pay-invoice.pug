extends layout

block breadcrumb
	li.breadcrumb-item
		a(href='/') Home
	li.breadcrumb-item Tools
	li.breadcrumb-item Pay Invoice

block headContent
	title Pay Invoice

	if (decodedInvoice)
		script.
			var countDownDate = new Date(#{parseInt(decodedInvoice.timestamp)} * 1000 + #{decodedInvoice.expiry} * 1000).getTime();

			// Update the count down every 1 second
			var x = setInterval(function() {
				// Get todays date and time
				var now = new Date().getTime();

				// Find the distance between now and the count down date
				var distance = countDownDate - now;

				// Time calculations for days, hours, minutes and seconds
				var days = Math.floor(distance / (1000 * 60 * 60 * 24));
				var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
				var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
				var seconds = Math.floor((distance % (1000 * 60)) / 1000);

				// Display the result in the element with id="demo"
				var str = "";
				if (days > 0) {
					str += (days + "d ");
				}
				if (hours > 0) {
					str += (hours + "h ");
				}

				str += minutes + "m ";
				str += seconds + "s";

				document.getElementById("expiry-text").innerHTML = str;

				// If the count down is finished, write some text
				if (distance < 0) {
					clearInterval(x);
					document.getElementById("expiry-text").innerHTML = "Expired";
					document.getElementById("expiry-text").className += "text-danger";
				}
			}, 1000);
	
block content
	+pageTitle("Pay Invoice")


	if (!session.admin)
		- var loginRequiredNote = "allow you to pay an invoice from your LND node.";
		include includes/login-required-alert.pug

	else

		if (payInvoiceResponse)
			if (payInvoiceResponse.payment_error != "")
				.alert.alert-danger
					h3.h5 Failed to Pay Invoice

					.mb-3 Error: #{payInvoiceResponse.payment_error}

					span Details
					pre
						code.json #{JSON.stringify(payInvoiceResponse, null, 4)}
			else
				.alert.alert-success
					h3.h6 Payment Sent

					.mb-3
						- var dest_pubkey = payInvoiceResponse.payment_route.hops[payInvoiceResponse.payment_route.hops.length - 1].pub_key;
						span Your payment of 
						span
							- var currencyValue = new Decimal(payInvoiceResponse.payment_route.total_amt).dividedBy(coinConfig.baseCurrencyUnit.multiplier);
							include includes/value-display.pug
						span  was sent to 
						span #{dest_pubkey.substring(0, config.site.pubkeyMaxDisplayLength)}
						span  in 
						span #{parseInt(payInvoiceResponse.payment_route.hops.length).toLocaleString()} hop
							if (payInvoiceResponse.payment_route.hops.length != 1)
								span s
						span . You paid 
						span
							- var currencyValue = new Decimal(payInvoiceResponse.payment_route.total_fees_msat).dividedBy(coinConfig.currencyUnitsByName.msat.multiplier);
							- var tempCurrencyFormatType = "msat";
							include includes/value-display.pug
						span  in fees.

					.d-flex
						.card.text-body.shadow-sm.me-3
							.card-header
								h3.h6.mb-0.fw-light
									i.fas.fa-play-circle.me-2.fa-lg
									span Origin

							.card-body
								.fw-bold.mb-2 Node
								
								- var card_node_pubkey = lndRpc.internal_pubkey;
								include includes/node-card.pug

						each hop, hopIndex in payInvoiceResponse.payment_route.hops
							
							.card.text-body.shadow-sm.me-3
								.card-header
									h3.h6.fw-light.mb-0
										if (hopIndex == (payInvoiceResponse.payment_route.hops.length - 1))
											i.fas.fa-check-circle.me-2.fa-lg
										else
											i.fas.fa-arrow-circle-right.me-2.fa-lg

										span Hop ##{(hopIndex + 1).toLocaleString()}

										if (hopIndex == (payInvoiceResponse.payment_route.hops.length - 1))
											span  (Destination)
									
								.card-body
									.mb-3.border-bottom.pb-3
										.fw-bold.mb-2 Node
										- var card_node_pubkey = hop.pub_key;
										include includes/node-card.pug
										

									.mb-2
										.fw-bold Channel

										+channelId(hop.chan_id, true)

									div
										.fw-bold Fees
										
										if (parseInt(hop.fee_msat) > 0)
											span.text-danger +
												- var currencyValue = new Decimal(hop.fee_msat).dividedBy(coinConfig.currencyUnitsByName.msat.multiplier);
												- tempCurrencyFormatType = "msat";
												include includes/value-display.pug
										else
											span.text-success 0

					if (false)
						pre
							code.json #{JSON.stringify(payInvoiceResponse, null, 4)}

		if (decodedInvoice)
					ul(class='nav nav-tabs mb-3')
						li(class="nav-item")
							a.nav-link.active(data-bs-toggle="tab" href="#tab-summary" role="tab") Summary
						li(class="nav-item")
							a.nav-link(data-bs-toggle="tab" href="#tab-json" role="tab") JSON

					.tab-content
						.tab-pane.active(id="tab-summary", role="tabpanel")
							+contentSection("Invoice Details")
								h6.fw-light.mb-4 Destination
								- var card_node_pubkey = decodedInvoice.destination;
								include ./includes/node-card.pug

								hr.my-4

								+summaryRow(4)
									+summaryItem("Description")
										if (decodedInvoice.description)
											span #{decodedInvoice.description}
										else
											span -

									
									+summaryItem("Amount")
										- var currencyValue = new Decimal(decodedInvoice.num_satoshis).dividedBy(coinConfig.baseCurrencyUnit.multiplier);
										include ./includes/value-display.pug


									+summaryItem("Date")
										- var timestampTime = parseInt(decodedInvoice.timestamp);
										- var timeAgoTime = timestampTime;
										- var timeAgo = moment.duration(moment.utc(new Date()).diff(moment.utc(new Date(parseInt(timestampTime) * 1000))));

										span #{moment.utc(new Date(parseInt(timestampTime) * 1000)).format("Y-MM-DD HH:mm:ss")} utc
										br
										span.text-muted #{timeAgo.format()} ago


									+summaryItem("Hash")
										| #{utils.ellipsizeMiddle(decodedInvoice.payment_hash, 24)}
										+copyTextButton(decodedInvoice.payment_hash)


								hr.my-4


								form(method="post")
									input(type="hidden", name="invoice", value=invoice)

									button.btn.btn-primary(type="submit")
										i.fas.fa-receipt.me-2
										span Pay Invoice


								

						.tab-pane(id="tab-json", role="tabpanel")
							pre
								code.json #{JSON.stringify(decodedInvoice, null, 4)}

					
					

		else
			form(method="get")
				.mb-3
					label.form-label(for="invoice") Encoded Payment Request / Invoice
					textarea.form-control.form-control-lg(rows="4" id="invoice" name="invoice")

				button.btn.btn-primary(type="submit")
					i.fas.fa-file-alt.me-2
					span Decode
